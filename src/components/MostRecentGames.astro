---
import { startOfWeek, endOfWeek, format, getDay, parseISO } from "date-fns";
import CalendarItem from "./CalendarItem.astro";
const startDate = format(startOfWeek(new Date()), "yyyy-MM-dd");
const endDate = format(endOfWeek(new Date()), "yyyy-MM-dd");
const baseUrl = "https://statsapi.web.nhl.com/api/v1";
const url = `${baseUrl}/schedule?teamId=6&startDate=${startDate}&endDate=${endDate}`;
const response = await fetch(url).then((res) => res.json());
const games = Array(7).fill(null);
if (response.dates.length === 0) {
  //return a new array of 7 null items
  return games;
} else {
  response.dates.forEach((date) => {
    const dayOfWeek = getDay(parseISO(date.date));
    console.log(dayOfWeek);
    games[dayOfWeek] = date.games[0];
  });
}
---

<div class="flex flex-row justify-around gap-1">
  {
    games.map((game, index) => {
      return (
        <CalendarItem game={game} showDayOfWeek={true} gameIndex={index} />
      );
    })
  }
</div>
